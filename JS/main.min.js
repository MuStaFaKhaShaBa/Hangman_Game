const words = {
    programming: [
        "php",
        "JavaScript",
        "Go",
        "scala",
        "r",
        "fortran",
        "mysql",
        "python",
    ],
    movies: [
        "prestige",
        "inception",
        "parasite",
        "interstellar",
        "whiplash",
        "memento",
        "coco",
        "up",
    ],
    people: [
        "alpert einstein",
        "hitchcock",
        "Alexander",
        "Cleopatra",
        "mahatma ghandi",
    ],
    countries: ["egypt", "qatar", "yemen", "palestine", "syria"],
};
let WordSelected,
    LettersOfWordDOM,
    maxCounter,
    timerId,
    Counter = 0,
    hangmanCounter = 0,
    User = { name: "", highestScore: 4100, highestScoreWord: "", wordSolved: [] },
    timerScore = 0;
const SRCAUDIO_BAD = [
    "allah-ykhreb-betk.mp3",
    "ana-t3ban.mp3",
    "ya-allah.mp3",
    "ya-Gad3.mp3",
    "ykhreb-bet-m3reftk.mp3",
],
    SRCAUDIO_GOOD = ["bravo-3lek.mp3"];
let BtnActions = (e) => {
    if (e.target.classList.contains("letter")) {
        e.target.setAttribute("disabled", "");
        let t = new RegExp(e.target.textContent, "g"),
            o = WordSelected.matchAll(t),
            r = o.next();
        if (r.done)
            displayHangman() &&
                (Swal.fire({ icon: "error", title: "Try Again", text: "Man Hanged" }),
                    clearInterval(timerId),
                    document.removeEventListener("click", BtnActions));
        else
            for (; !r.done;) {
                let e = r.value.index;
                if (
                    (LettersOfWordDOM[e].firstElementChild.classList.remove("opacity-0"),
                        Counter++,
                        playVoice("good"),
                        Counter == maxCounter)
                )
                    return void successUser();
                r = o.next();
            }
    }
};
function resetSettings() {
    clearInterval(timerId),
        Array.from(document.querySelectorAll("#btn_letters .letter")).forEach(
            (e) => {
                e.removeAttribute("disabled");
            }
        ),
        (timerScore = 0),
        (Counter = 0),
        (hangmanCounter = 0),
        (stand.style.display = "none"),
        (rope.style.display = "none"),
        (head.style.display = "none"),
        (man_body.style.display = "none"),
        (hands.style.display = "none"),
        (leg.style.display = "none"),
        document.querySelector(".man-draw").classList.remove("man-dead");
}
function successUser() {
    Swal.fire({ icon: "success", title: "Successful" }),
        storeNewRecord({
            wName: WordSelected,
            score: timerScore,
            wrongAns: hangmanCounter,
        }),
        document.removeEventListener("click", BtnActions),
        clearInterval(timerId);
}
function randomChoice() {
    let e =
        Object.keys(words)[Math.floor(Math.random() * Object.keys(words).length)],
        t = Math.floor(Math.random() * words[e].length);
    return { cat: e, word: words[e][t].toUpperCase() };
}
function setChoiseToDOM({ cat: e, word: t }) {
    (word_cat.textContent = e),
        (WordSelected = t),
        (maxCounter = WordSelected.length);
    let o = document.createDocumentFragment();
    Array.from(t).forEach((e) => {
        let t = document.createElement("div"),
            r = document.createElement("p");
        t.classList.add(
            "letter-place",
            "bg-light",
            "text-uppercase",
            "fw-bold",
            "fs-5",
            "px-3",
            "py-2",
            "rounded-2"
        ),
            " " == e && (t.classList.replace("bg-light", "border-0"), maxCounter--),
            r.classList.add("fs-2", "mb-0", "fw-bold", "text-primary", "opacity-0"),
            (r.textContent = " " != e ? e : (r.classList.remove("opacity-0"), "-")),
            t.appendChild(r),
            o.appendChild(t);
    }),
        (answer_lett.innerHTML = ""),
        answer_lett.appendChild(o),
        (LettersOfWordDOM = Array.from(answer_lett.children));
}
function displayHangman() {
    switch ((playVoice("bad"), hangmanCounter++)) {
        case 0:
            stand.style.display = "block";
            break;
        case 1:
            rope.style.display = "block";
            break;
        case 2:
            head.style.display = "flex";
            break;
        case 3:
            man_body.style.display = "block";
            break;
        case 4:
            hands.style.display = "block";
            break;
        case 5:
            leg.style.display = "block";
            break;
        default:
            return document.querySelector(".man-draw").classList.add("man-dead"), !0;
    }
    return !1;
}
async function playVoice(e) {
    (audioPlayer.firstElementChild.src =
        "bad" == e
            ? hangmanCounter > 5
                ? "./audio/aah.mp3"
                : `./audio/${SRCAUDIO_BAD[Math.floor(Math.random() * SRCAUDIO_BAD.length)]
                }`
            : Counter == maxCounter
                ? "./audio/allah-akbar-3lek.mp3"
                : `./audio/${SRCAUDIO_GOOD[Math.floor(Math.random() * SRCAUDIO_GOOD.length)]
                }`),
        await audioPlayer.load(),
        audioPlayer.play();
}
async function getUserInfo() {
    const { value: e } = await Swal.fire({
        title: "Your Name",
        input: "text",
        inputValidator: (e) => {
            if (!e) return "You need to write Your Name!";
        },
        allowOutsideClick: !1,
        inputPlaceholder: "Enter your Name",
    });
    Swal.fire(`<p class="text-secondary">Welcome</p> ${e}`), (User.name = e);
}
function storeNewRecord(e) {
    sortRecords(e), toLocal();
}
function toLocal() {
    window.localStorage.setItem("userHangmanObj", JSON.stringify(User));
}
function updateUserData() { }
function createRecord({ wName: e, score: t, wrongAns: o }, r) {
    const n = document.createElement("tr"),
        a = document.createElement("td"),
        s = document.createElement("td"),
        l = document.createElement("td"),
        d = document.createElement("td"),
        c = document.createElement("button");
    return (
        a.append(e),
        a.setAttribute("title", e),
        s.append(`${t}s`),
        l.append(o),
        d.setAttribute("title", "Remove Record"),
        c.setAttribute("type", "button"),
        c.classList.add("btn", "btn-outline-danger"),
        (c.innerHTML = '<i class="fa-solid fa-trash-can"></i>'),
        (c.onclick = (e) => deleteRecord(r)),
        d.append(c),
        n.append(a, s, l, d),
        n
    );
}
function updateHighScore() {
    (User.highestScore =
        User.wordSolved.length > 0 ? User.wordSolved[0].score : ""),
        (User.highestScoreWord =
            User.wordSolved.length > 0 ? User.wordSolved[0].wName : ""),
        (user_highest.textContent =
            User.wordSolved.length > 0 ? User.wordSolved[0].score : ""),
        (user_highest_word.textContent =
            User.wordSolved.length > 0 ? User.wordSolved[0].wName : "");
}
function deleteRecord(e) {
    User.wordSolved.splice(e, 1), updateHighScore(), toLocal();
    let t = words_Solved_Body.children;
    words_Solved_Body.removeChild(t[e]);
    for (let o = e; o < t.length; o++)
        t[o].lastElementChild.firstElementChild.onclick = (e) => {
            deleteRecord(o);
        };
}
function displayTimer() {
    timerId = setInterval(() => {
        timerScore++,
            (timer_score.textContent = `\n        ${Math.floor(timerScore / 60) > 0
                    ? `${Math.floor(timerScore / 60)} : ${timerScore % 60}`
                    : `${timerScore}`
                }\n        `);
    }, 1e3);
}
function sortRecords(e) {
    let t = 0;
    e: for (let o = 0; o < User.wordSolved.length; o++, t++)
        if (User.wordSolved[o].score >= e.score) {
            if (User.wordSolved[o].score != e.score) {
                t = o;
                break;
            }
            for (let r = o; r < User.wordSolved.length; r++)
                if (User.wordSolved[r].wrongAns >= e.wrongAns) {
                    if (
                        User.wordSolved[r].wrongAns == e.wrongAns &&
                        User.wordSolved[r].wName.length < e.wName.length
                    ) {
                        t = r + 1;
                        break;
                    }
                    t = r;
                    break e;
                }
        }
    User.wordSolved.splice(t, 0, e);
    let o = createRecord(e, t);
    words_Solved_Body.insertBefore(o, words_Solved_Body.children[t]);
    for (let e = t + 1; e < words_Solved_Body.children.length; e++)
        words_Solved_Body.children[e].lastElementChild.firstElementChild.onclick = (
            t
        ) => {
            deleteRecord(e);
        };
    0 == t &&
        (Swal.fire({ icon: "success", title: "New Score" }), updateHighScore());
}
!(async function () {
    let e = JSON.parse(localStorage.getItem("userHangmanObj"));
    if (e) {
        (User = e),
            Swal.fire(
                `<p class="fs-3 text-secondary mb-2">Welcome Again </p> ${User.name}`
            );
        let t = document.createDocumentFragment();
        User.wordSolved.forEach((e, o) => {
            t.append(createRecord(e, o));
        }),
            words_Solved_Body.appendChild(t),
            (user_highest.textContent = User.highestScore),
            (user_highest_word.textContent = User.highestScoreWord);
    } else
        await getUserInfo(),
            localStorage.setItem("userHangmanObj", JSON.stringify(User));
    user_name.textContent = User.name;
})(),
    btnStart.addEventListener("click", (e) => {
        "New Word" == btnStart.textContent && resetSettings(),
            document.addEventListener("click", BtnActions),
            setChoiseToDOM(randomChoice()),
            displayTimer(),
            (btnStart.textContent = "New Word");
    });
let offset = [0, 0],
    isDown = !1;
btn_floatIcon.addEventListener(
    "mousedown",
    (e) => {
        (isDown = !0),
            (offset = [
                btn_floatIcon.offsetLeft - e.clientX,
                btn_floatIcon.offsetTop - e.clientY,
            ]);
    },
    !0
),
    document.addEventListener(
        "mouseup",
        (e) => {
            isDown = !1;
        },
        !0
    ),
    document.addEventListener(
        "mousemove",
        (e) => {
            isDown &&
                ((btn_floatIcon.style.left = e.clientX + offset[0] + "px"),
                    (btn_floatIcon.style.top = e.clientY + offset[1] + "px"));
        },
        !0
    );
